原子类：无锁工具的典范
实现原理：
CPU 为了解决并发问题，提供了CAS指令（CAS,全称Compare And Swap ,即“比较并交换”)。CAS指令3个参数：共享变量的内存地址A,用于比较的值B和共享变量新值C;并且只有
当内存中地址A处的值等于B时，才能将内存中地址A处的值更新为新值C.作为一条CPU指令，CAS指令本身能够保证原子性。

do {
  // 获取当前值
  oldV = xxxx；
  // 根据当前值计算新值
  newV = ...oldV...
}while(!compareAndSwap(oldV,newV);
